# Copyright (C) 2008-2009 NAV CANADA (http://www.navcanada.ca)
# All rights reserved.
#
# This software is licensed as described in the file COPYING, which
# you should have received as part of this distribution.
#
# Author: Mike Stoddart <stoddam@navcanada.ca>
# Author: Jeff Dever <deverj@navcanada.ca>

Welcome to the Trac Admin Toolkit. This README.TXT file describes how to
use the toolkit.

Refer to the INSTALL.TXT file for instructions on how to install the
toolkit.

**** Install System Software - system_setup.sh

This shell script uses yum to install essential system packages that are not
the usual defaults as well as specific python packages including trac itself.

This has been testing with CentOS 5.2 so your mileage will vary with
different systems.  At least it does give a list of system and python packages
that required for trac/svn/postgres.

**** Initialize Server - trac-admin-init

Initializes a new trac server with directory rooted at (ROOT_PATH in config.py)
Configuration files for Apache copied to /etc/httpd/conf.d, top level 
directories for trac, svn and conf are created under the root path, and 
a postgres datastore is initialized under the root path as well.

After running init, you should confirm that your pg_hba.conf as the correct
access control to the datastore.  The init adds one line to the file for 
local host access, others may need to be added or removed depending on 
your configuration.


**** Make New Project - trac-admin-mkproject

The Admin Toolkit makes it easy to create a new project. Simply run
the script and answer a few questions, including a short project name and
a one line description.

The script creates the following, assuming you enter "support" as the
short project name:

    Postgresql database called "support"
    Trac environment in /srv/trac/support
    Subversion repository "support" in /srv/svn/support
    
The script will also ask if it should install the Subversion hooks for
this project:

    svn synchronize	adds a post commit hook that will do a svnsync operation
			after each commit to synchronize one or more mirrors
    trac hooks		ensures the developer includes a Trac ticket in the
			commit comment and modifies the ticket
    email notification	sends a email to the given address after every commit


The script will also ask if the default Trac milestones and versions should 
be deleted.

**** Remove Existing Project - trac-admin-rmproject

Deleting an existing project is also easy - simply run the
trac-admin-rmproject script. The script deletes:

    the Subversion repository
    the Trac environment
    the Postgresql database

**** Add New User - trac-admin-useradd

Anonymous users have read-only access for new projects. To gain write
access, users must be added to the .htpasswd file. This is achieved using
the trac-admin-useradd script. It lets you add a user to multiple
projects.

**** Delete User  - trac-admin-userdel

The trac-admin-userdel script deletes a user from the .htpasswd file.
This removes all write privileges for that user for the given Trac
environments and Subversion repositories.

**** Promote User - trac-admin-promote

The trac-admin-promote script gives a user admin privileges on one or
more Trac environments.

**** Demote User - trac-admin-demote

The trac-admin-demote script removes admin privileges for a user on one
or more Trac environments.
