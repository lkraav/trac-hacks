Index: trac/ticket/web_ui.py
===================================================================
--- trac/ticket/web_ui.py	(revision 5807)
+++ trac/ticket/web_ui.py	(working copy)
@@ -431,6 +431,8 @@
                          # Store a timestamp for detecting "mid air collisions"
                          'timestamp': str(ticket.time_changed)})
 
+        data['backrefs'] = self._get_backrefs(context, ticket)
+
         self._insert_ticket_data(context, data, get_reporter_id(req, 'author'),
                                  field_changes)
 
@@ -894,6 +896,39 @@
         for key in field_changes:
             ticket[key] = field_changes[key]['new']
 
+    def _get_backrefs(self, context, ticket):
+        id = ticket.id
+        cursor = context.db.cursor()
+        refs = ""
+
+        cursor.execute("SELECT 0, id, description "
+                       "FROM ticket WHERE description LIKE '%%#%s%%' "
+                       " OR description LIKE '%%ticket:%s%%' "
+                       "UNION "
+                       "SELECT 0, t.id, newvalue "
+                       "FROM ticket_change c JOIN ticket t on c.ticket = t.id "
+                       "WHERE newvalue LIKE '%%#%s%%' "
+                       " OR newvalue LIKE '%%ticket:%s%%' "
+                       "UNION "
+                       "SELECT 1, rev, message "
+                       "FROM revision WHERE message LIKE '%%#%s%%' "
+                       "UNION "
+                       "SELECT 2, name, text "
+                       "FROM wiki WHERE (text LIKE '%%#%s%%' "
+                       " OR text LIKE '%%ticket:%s%%') "
+                       "AND version = (SELECT max(version) FROM wiki w "
+                       " WHERE w.name = wiki.name) "
+                       "ORDER BY 1 desc, 2"
+                       % ((id,) * 7))
+
+        for idx, row in enumerate(cursor):
+            rtyp, rid, text = row
+            # check weather the link is an single word
+            if re.search(r"(\s|^)#%s(\s|$)" % id, text):
+                ref = ('#[ '[rtyp] + str(rid) + ' ] '[rtyp])
+                refs += ref.strip() + " - "
+        return refs[:-3]
+
     def _insert_ticket_data(self, context, data, author_id, field_changes):
         """Insert ticket data into the template `data`"""
         req = context.req
Index: trac/ticket/templates/ticket.html
===================================================================
--- trac/ticket/templates/ticket.html	(revision 5807)
+++ trac/ticket/templates/ticket.html	(working copy)
@@ -209,6 +209,16 @@
                 ${wiki_to_html(context, ticket.description)}
               </div>
             </div>
+
+            <div py:if="backrefs">
+               <div class="description">
+                    <h3 id="comment:bakref">Referenced by </h3>
+                    <div class="searchable">
+                       ${wiki_to_html(context, backrefs)}
+                    </div>
+               </div>
+            </div>
+
         </div>
       </fieldset>
       <!--! End of ticket box -->
