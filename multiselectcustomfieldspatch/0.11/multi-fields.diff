diff -ur Trac-0.11.6/trac/htdocs/css/ticket.css trac/htdocs/css/ticket.css
--- Trac-0.11.6/trac/htdocs/css/ticket.css	2009-11-28 14:21:46.000000000 -0600
+++ trac/htdocs/css/ticket.css	2010-02-05 10:37:20.101503281 -0600
@@ -59,6 +59,11 @@
 #ticket table.properties td p:first-child { margin-top: 0 }
 #ticket table.properties td p:last-child { margin-bottom: 0 }
 #ticket table.properties .description { border-top: 1px solid #dd9 }
+#ticket table.properties ul.multi-value {
+ padding: 0; 
+ margin-top: 0;
+ margin-bottom: 0;
+}
 
 #ticket .description h3 {
  border-bottom: 1px solid #dd9;
diff -ur Trac-0.11.6/trac/htdocs/js/query.js trac/htdocs/js/query.js
--- Trac-0.11.6/trac/htdocs/js/query.js	2009-11-28 14:21:46.000000000 -0600
+++ trac/htdocs/js/query.js	2010-02-05 10:37:20.052911062 -0600
@@ -223,7 +223,7 @@
         // Add the selector or text input for the actual filter value
         td = document.createElement("td");
         td.className = "filter";
-        if (property.type == "select") {
+        if (property.type == "select" || property.type == "multi") {
           var element = createSelect(propertyName, property.options, true);
         } else if ((property.type == "text") || (property.type == "textarea")) {
           var element = document.createElement("input");
@@ -275,4 +275,4 @@
     }
   }
 
-})(jQuery);
\ No newline at end of file
+})(jQuery);
diff -ur Trac-0.11.6/trac/ticket/api.py trac/ticket/api.py
--- Trac-0.11.6/trac/ticket/api.py	2009-11-28 14:21:46.000000000 -0600
+++ trac/ticket/api.py	2010-02-05 10:37:20.204291139 -0600
@@ -309,7 +309,7 @@
                 'label': config.get(name + '.label') or name.capitalize(),
                 'value': config.get(name + '.value', '')
             }
-            if field['type'] == 'select' or field['type'] == 'radio':
+            if field['type'] in ('select', 'radio', 'multi'):
                 field['options'] = config.getlist(name + '.options', sep='|')
                 if '' in field['options']:
                     field['optional'] = True
diff -ur Trac-0.11.6/trac/ticket/model.py trac/ticket/model.py
--- Trac-0.11.6/trac/ticket/model.py	2009-11-28 14:21:46.000000000 -0600
+++ trac/ticket/model.py	2010-02-05 10:37:20.204291139 -0600
@@ -118,6 +118,8 @@
 
     def __setitem__(self, name, value):
         """Log ticket modifications so the table ticket_change can be updated"""
+        if isinstance(value, list): #   account for multi-selects
+            value = '|'.join(value) + '|'
         if name in self.values and self.values[name] == value:
             return
         if name not in self._old: # Changed field
@@ -126,7 +128,7 @@
             del self._old[name]
         if value:
             if isinstance(value, list):
-                raise TracError(_("Multi-values fields not supported yet"))
+                value = '|'.join(value) + '|'
             field = [field for field in self.fields if field['name'] == name]
             if field and field[0].get('type') != 'textarea':
                 value = value.strip()
@@ -155,6 +157,11 @@
             if name[9:] not in values:
                 self[name[9:]] = '0'
 
+        #   We do something similar for empty multi-selects
+        for f in self.fields:
+            if f['type'] == 'multi' and not f['name'] in values:
+                self[f['name']] = ''
+
     def insert(self, when=None, db=None):
         """Add ticket to database"""
         assert not self.exists, 'Cannot insert an existing ticket'
diff -ur Trac-0.11.6/trac/ticket/query.py trac/ticket/query.py
--- Trac-0.11.6/trac/ticket/query.py	2009-11-28 14:21:46.000000000 -0600
+++ trac/ticket/query.py	2010-02-05 10:37:20.204291139 -0600
@@ -135,7 +135,7 @@
             field, values = filter_
             # from last chars of `field`, get the mode of comparison
             mode = ''
-            if field and field[-1] in ('~', '^', '$') \
+            if field and field[-1] in ('~', '^', '$', '|') \
                                 and not field in cls.substitutions:
                 mode = field[-1]
                 field = field[:-1]
@@ -309,6 +309,14 @@
                         val = bool(int(val))
                     except (TypeError, ValueError):
                         val = False
+                elif field and field['type'] == 'multi':
+                    val = (val or '').split('|')
+                    if val.count(''):
+                        val.remove('')
+                    if len(val):
+                        val = ', '.join(val)
+                    else:
+                        val = 'None'
                 result[name] = val
             results.append(result)
         cursor.close()
@@ -448,6 +456,8 @@
                 value = value + '%'
             elif mode == '$':
                 value = '%' + value
+            elif mode == '|':
+                value = '%' + value + '|%'
             return ("COALESCE(%s,'') %s%s" % (name, neg and 'NOT ' or '',
                                               db.like()),
                     value)
@@ -461,7 +471,7 @@
             # starts-with, negation, etc.)
             neg = v[0].startswith('!')
             mode = ''
-            if len(v[0]) > neg and v[0][neg] in ('~', '^', '$'):
+            if len(v[0]) > neg and v[0][neg] in ('~', '^', '$', '|'):
                 mode = v[0][neg]
 
             # Special case id ranges
@@ -570,7 +580,7 @@
                 if neg:
                     val = val[1:]
                 mode = ''
-                if val[:1] in ('~', '^', '$') \
+                if val[:1] in ('~', '^', '$', '|') \
                                     and not val in self.substitutions:
                     mode, val = val[:1], val[1:]
                 constraint['mode'] = (neg and '!' or '') + mode
@@ -620,6 +630,10 @@
             {'name': _("is"), 'value': ""},
             {'name': _("is not"), 'value': "!"}
         ]
+        modes['multi'] = [
+            {'name': _("contains"), 'value': "|"},
+            {'name': _("does not contain"), 'value': "!"}
+        ]
 
         groups = {}
         groupsequence = []
diff -ur Trac-0.11.6/trac/ticket/templates/query.html trac/ticket/templates/query.html
--- Trac-0.11.6/trac/ticket/templates/query.html	2009-11-28 14:21:46.000000000 -0600
+++ trac/ticket/templates/query.html	2010-02-05 10:37:20.129502862 -0600
@@ -47,7 +47,7 @@
             <py:for each="field_name in field_names" py:with="field = fields[field_name]">
               <py:for each="constraint_name, constraint in constraints.items()">
                 <tbody py:if="field_name == constraint_name"
-                  py:with="multiline = field.type in ('select', 'text', 'textarea')">
+                  py:with="multiline = field.type in ('select', 'multi', 'text', 'textarea')">
                   <py:for each="constraint_idx, constraint_value in enumerate(constraint['values'])">
                     <tr class="${field_name}" py:if="multiline or constraint_idx == 0">
                       <py:choose test="constraint_idx">
@@ -78,6 +78,15 @@
                           </select>
                         </py:when>
 
+                        <py:when test="field.type == 'multi'">
+                          <select name="${constraint_name}">
+                            <option></option>
+                            <option py:for="option in field.options"
+                              selected="${option == constraint_value and 'selected' or None}">$option
+                            </option>
+                          </select>
+                        </py:when>
+
                         <py:when test="field.type == 'radio'">
                           <py:for each="option in field.options">
                             <input type="checkbox" id="${field_name}_$option" name="${field_name}"
diff -ur Trac-0.11.6/trac/ticket/templates/ticket.html trac/ticket/templates/ticket.html
--- Trac-0.11.6/trac/ticket/templates/ticket.html	2009-11-28 14:21:46.000000000 -0600
+++ trac/ticket/templates/ticket.html	2010-02-05 10:37:20.129502862 -0600
@@ -332,6 +332,18 @@
                                 py:content="option"></option>
                       </optgroup>
                     </select>
+                    <select py:when="'multi'" id="field-${field.name}" name="field_${field.name}" size="5" 
+                      multiple="multiple">
+                      <option py:for="option in field.options"
+                              selected="${option in value.split('|') or None}"
+                              py:content="option"></option>
+                      <optgroup py:for="optgroup in field.optgroups"
+                                py:if="optgroup.options"
+                                label="${optgroup.label}">
+                        <option py:for="option in optgroup.options"
+                                selected="${option in value.split('|') or None}"
+                                py:content="option"></option>
+                      </optgroup>
+                    </select>
                     <textarea py:when="'textarea'" id="field-${field.name}" name="field_${field.name}"
                               cols="${field.width}" rows="${field.height}"
                               class="${field.format == 'wiki' and 'wikitext' or None}">
diff -ur Trac-0.11.6/trac/ticket/web_ui.py trac/ticket/web_ui.py
--- Trac-0.11.6/trac/ticket/web_ui.py	2009-11-28 14:21:46.000000000 -0600
+++ trac/ticket/web_ui.py	2010-02-05 10:37:20.204291139 -0600
@@ -935,13 +935,21 @@
             if field['name'] == 'status':
                 continue
             name = field['name']
+
             if name in ticket.values and name in ticket._old:
                 value = ticket[name]
                 if value:
-                    if value not in field['options']:
-                        add_warning(req, '"%s" is not a valid value for '
-                                    'the %s field.' % (value, name))
-                        valid = False
+                    if field['type'] == 'multi':
+                        values = value.split('|')
+                        if len(values) > 1:
+                            values.remove('')   #   get rid of trailing ''
+                    else:
+                        values = (value,)
+                    for val in values:
+                        if val not in field['options']:
+                            add_warning(req, '"%s" is not a valid value for '
+                                        'the %s field.' % (value, name))
+                            valid = False
                 elif not field.get('optional', False):
                     add_warning(req, 'field %s must be set' % name)
                     valid = False
@@ -1131,19 +1139,32 @@
                     field['cc_update'] = 'cc_update' in req.args or None
 
             # per type settings
-            if type_ in ('radio', 'select'):
+            if type_ in ('radio', 'select', 'multi'):
                 if ticket.exists:
                     value = ticket.values.get(name)
                     options = field['options']
                     optgroups = []
                     for x in field.get('optgroups', []):
                         optgroups.extend(x['options'])
-                    if value and \
-                        (not value in options and \
-                         not value in optgroups):
-                        # Current ticket value must be visible,
-                        # even if it's not among the possible values
-                        options.append(value)
+                    if value:
+                        if type_ == 'multi':
+                            values = value.split('|')
+                            if len(values) > 1:
+                                values.remove('')
+                        else:
+                            values = (value,)
+                        for val in values:
+                            if not val in options and not val in optgroups:
+                                # Current ticket value must be visible,
+                                # even if it's not among the possible values
+                                options.append(val)
+                        #   Rendered output should be pretty for multi-values
+                        if len(values) > 1:
+                            from genshi.builder import Element
+                            choices = Element('ul', class_='multi-value')
+                            for val in values:
+                                choices.append(Element('li')(val))
+                            field['rendered'] = choices
             elif type_ == 'checkbox':
                 value = ticket.values.get(name)
                 if value in ('1', '0'):
@@ -1351,6 +1372,13 @@
         elif field == 'keywords':
             old_list, new_list = (old or '').split(), new.split()
             sep = ' '
+        elif type_ == 'multi':
+            old_list = (old or '').split('|')
+            if old_list.count(''):
+                old_list.remove('')
+            new_list = new.split('|')
+            if new_list.count(''):
+                new_list.remove('')
         if (old_list, new_list) != (None, None):
             added = [tag.em(render_elt(x)) for x in new_list 
                      if x not in old_list]
