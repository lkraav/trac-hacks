diff -urN trac-r2771/trac/db/postgres_backend.py aw-trac-r2771/trac/db/postgres_backend.py
--- trac-r2771/trac/db/postgres_backend.py	2005-12-29 02:34:53.463747000 -0800
+++ aw-trac-r2771/trac/db/postgres_backend.py	2006-01-13 17:13:41.510828632 -0800
@@ -38,6 +38,11 @@
                 params={}):
         cnx = self.get_connection(path, user, password, host, port, params)
         cursor = cnx.cursor()
+        try: 
+            cursor.execute('CREATE SCHEMA %s' % cnx.schema) 
+            cursor.execute('SET search_path TO %s, public', (cnx.schema,)) 
+        except AttributeError: 
+            pass 
         from trac.db_default import schema
         for table in schema:
             for stmt in self.to_sql(table):
@@ -82,8 +87,11 @@
                     import psycopg2 as psycopg
                 except ImportError:
                     import psycopg
+                self.PGSchemaError = psycopg.ProgrammingError    
             except ImportError:
                 from pyPgSQL import PgSQL
+                from pyPgSQL.libpq import OperationalError as PGSchemaError
+                self.PGSchemaError = PGSchemaError
         if psycopg:
             dsn = []
             if path:
@@ -99,6 +107,13 @@
             cnx = psycopg.connect(' '.join(dsn))
         else:
             cnx = PgSQL.connect('', user, password, host, path, port)
+        try: 
+            self.schema = params['schema'] 
+            cnx.cursor().execute('SET search_path TO %s, public', (self.schema,)) 
+        except self.PGSchemaError: 
+            cnx.rollback() 
+        except (KeyError, AttributeError): 
+            pass 
         ConnectionWrapper.__init__(self, cnx)
 
     def cast(self, column, type):
diff -urN trac-r2771/trac/db/util.py aw-trac-r2771/trac/db/util.py
--- trac-r2771/trac/db/util.py	2005-11-24 13:45:40.501162000 -0800
+++ aw-trac-r2771/trac/db/util.py	2006-01-13 17:14:00.714909168 -0800
@@ -53,4 +53,13 @@
         return object.__getattr__(self, name)
 
     def cursor(self):
-        return IterableCursor(self.cnx.cursor())
+        cur = self.cnx.cursor() 
+        try:
+            try: 
+                cur.execute("SET search_path TO %s, public", (self.schema,)) 
+                self.cnx.commit() 
+            except self.PGSchemaError: 
+                self.cnx.rollback() 
+        except AttributeError: 
+            pass
+        return IterableCursor(cur) 
