Test traclegos.config
=====================

The obligatory imports:

    >>> import sys
    >>> from pprint import pprint
    >>> from traclegos.config import ConfigMunger
    >>> from ConfigParser import InterpolationMissingOptionError
    >>> from StringIO import StringIO

Make the munger and some .ini files:

     >>> munger = ConfigMunger()
     >>> foo = StringIO("[foo]\nbar = fleem")
     
Test basic reading + writing functionality:

     >>> munger.read(foo)
     >>> munger.write(sys.stdout)
     [foo]
     bar = fleem

Test overriding:
     
     >>> munger.read("[foo]\nblah = florg\nbar=thorg")
     >>> munger.write(sys.stdout)
     [foo]
     bar = thorg
     blah = florg

Test variable interpolation:

     >>> munger.read("[variable]\nvar=%(value)s")
     >>> buffer = StringIO()
     >>> try:
     ...	munger.write(buffer)
     ... except InterpolationMissingOptionError, e:
     ... 	print e.reference
     value
     >>> munger.write(sys.stdout, vars=dict(value='interpolated'))
     [foo]
     bar = thorg
     blah = florg
     <BLANKLINE>
     [variable]
     var = interpolated

Testing dict-like functionality:

	>>> munger = ConfigMunger()
	>>> munger.read("[foo]\nblah = florg\nbar=thorg")
	>>> munger['foo']['bar']
	'thorg'
	>>> pprint(munger.dict())
	{'foo': {'bar': 'thorg', 'blah': 'florg'}}
	>>> pprint(munger['foo'])
	{'bar': 'thorg', 'blah': 'florg'}

You can read from a dictionary too:
    
    >>> munger = ConfigMunger()
    >>> munger.read({'foo': {'bar': 'baz'}})
    >>> munger['foo']['bar']
    'baz'
    >>> munger.write(sys.stdout)
    [foo]
    bar = baz
	
