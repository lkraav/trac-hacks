= Использование HTML в тексте wiki =

Trac поддерживает вставку HTML в любой контекст wiki, осуществляемую использованием [wiki:WikiProcessors wiki-процессора] `#!html`.

Ограничение, однако, состоит в том, что HTML должен быть грамматически правильный (well-formed).
В частности, вы не можете вставить открывающий тег в блоке `#!html`,
затем продолжить его обычным текстом wiki, а закрывающй тег вставить
во второй блок `#!html`.

К счастью, для создания оформленных <div>, <span> или даже сложных таблиц,
содержащих произвольный текст wiki, есть мощная альтернатива: использование
отдельных блоков `#!div`, `#!span` и `#!table`, а также `#!td` и `#!th`.

Эти wiki-процессоры встроенные и не требуют установки дополнительных пакетов.

== Как использовать `#!html` == #HowtoUseHTML
Используйте процессор ''html'', чтобы сообщить движку wiki, что текстовый блок должен быть обработан как HTML.

||= Разметка =||= Результат =||
{{{#!td
  {{{
  {{{
  #!html
  <h1 style="text-align: right; color: blue">Тест HTML</h1>
  }}}
  }}}
}}}
{{{#!td style="padding-left: 2em"
  {{{
  #!html
  <h1 style="text-align: right; color: blue">Тест HTML</h1>
  }}}
}}}

Заметьте, что Trac очищает ваш код HTML перед отображением. Это значит, что если вы попытаетесь использовать потенциально опасные конструкции, такие как обработчики событий на Javascript, то они будут удалены из вывода.

Начиная с 0.11, фильтрация выполняется Genshi, и по этому полученный выход будет грамматически правильным фрагментом HTML. Как отмечено выше, это означает, что вы больше не можете использовать два блока HTML: один для открытия <div>, а второй для его закрытия для оборачивания произвольного текста wiki.
Новый способ включения любого содержимого wiki в блок <div> — использование процессора `#!div`.

== Как использовать `#!div` и `#!span` == #HowtoUseDivSpan

||= Разметка =||= Результат =||
{{{#!td
  {{{
  {{{
  #!div class="important" style="border: 2pt solid; text-align: center"
  Это ''единственный'' правильный путь в Trac 0.11
  }}}

  {{{
  #!div class="wikipage" style="border: 1pt dotted"
  Только `wikipage` (то-же, что и без указания класса)
  }}}

  {{{
  #!div class="wikipage compact " style="border: 1pt solid"
  Использование совмещенных классов (`compact` и `wikipage`)
  }}}

  {{{
  #!div class="compact" style="border: 1pt dotted"
  Только `compact`
  }}}

  {{{
  #!div class="" style="border: 1pt solid"
  Без классов (//не// то-же, что без указания атрибута класс...)
  }}}
  }}}
}}}
{{{#!td style="padding-left: 2em"
  {{{
  #!div class="important" style="border: 2pt solid; text-align: center"
  Это ''единственный'' правильный путь в Trac 0.11
  }}}

  {{{
  #!div class="wikipage" style="border: 1pt dotted"
  Только `wikipage` (то-же, что и без указания класса)
  }}}

  {{{
  #!div class="wikipage compact " style="border: 1pt solid"
  Использование совмещенных классов (`compact` и `wikipage`)
  }}}

  {{{
  #!div class="compact" style="border: 1pt dotted"
  Только `compact`
  }}}

  {{{
  #!div class="" style="border: 1pt solid"
  Без классов (//не// то-же, что без указания атрибута класс...)
  }}}
}}}

Заметьте, что содержимое блока `#!div` содержится в одном или более параграфах, которые имеют ненулевые верхний и нижний отступы. В примере выше это дает верхнюю и нижнюю отбивки. Для ликвидации верхнего и нижнего отступов добавьте к `#!div` класс `compact`. Среди других предопределенных классов, кроме `wikipage` и `compact`, класс `important`, который делает параграф выделяющимся. Дополнительные классы CSS можно определить в файле `site/style.css`, для примеров см. TracInterfaceCustomization#SiteAppearance.

Для span лучше использовать синтаксис макро-вызова:
||= Разметка =||
{{{#!td
  {{{
  Hello 
  [[span(''WORLD'' (нажми [#anchor здесь]), style=color: green; font-size: 120%, id=anchor)]]!
  }}}
}}}
|---------------------------------------------------------------------------------
||= Результат =||
{{{#!td style="padding-left: 2em"
  Hello
  [[span(''WORLD'' (нажми [#anchor здесь]), style=color: green; font-size: 120%, id=anchor)]]!
}}}

== Как использовать `#!td` и другие процессоры для таблиц == #Tables

Процессоры `#!td` или `#!th` предназначены соответственно для создания ячеек данных и заголовков в таблицах. Остальные процессоры — `#!table` и `#!tr` не обязательны для создания структуры таблицы, поскольку `#!td` или `#!th` сделают это автоматически. Разделитель строк `|-` можно использовать для начала новой строки, если необходимо, но некоторые могут использовать для этого блок `#!tr`, потому что он предоставляет более формальную группировку и добавляет возможность использовать дополнительный уровень выравнивания. Главная задача `#!table` и `#!tr` — дать возможность указания атрибутов HTML, таких как ''style'' или ''valign'' для этих элементов.

||= Разметка =||= Результат =||
{{{#!td
 {{{
 Простая таблица 2x2 с богатым содержанием:
 {{{#!th align=left
  - Левый
  - Заголовок
 }}}
 {{{#!th align=left
  - Правый
  - Заголовок
 }}}
 |----------------------------------
 {{{#!td style="background: #ffd"
  - Левое
  - Содержимое
 }}}
 {{{#!td style="vertical-align: top"
 !ПравоеСодержимое
 }}}
 |----------------------------------
 || ... и это можно смешать||\
 ||с ячейками из каналов ||
 {{{#!td colspan=2
 Выберите стиль, наиболее подходящий
 для вашего содержания
 
 См. в WikiFormatting#Tables подробности
 о таблицах из каналов.
 }}}
 
 Если нужно добавить
 атрибутов к самой таблице...
 
 {{{
 #!table style="border:none;text-align:center;margin:auto"
   {{{#!tr ====================================
     {{{#!th style="border: none"
     Левый заголовок
     }}}
     {{{#!th style="border: none"
     Правый заголовок
     }}}
   }}}
   {{{#!tr ==== style="border: 1px dotted grey"
     {{{#!td style="border: none"
     1.1
     }}}
     {{{#!td style="border: none"
     1.2
     }}}
   }}}
   {{{#!tr ====================================
     {{{#!td style="border: none"
     2.1
     }}}
     {{{#!td
     2.2
     }}}
   }}}
 }}}


 }}}
}}}
{{{#!td valign=top
Простая таблица 2x2 с богатым содержанием:
{{{#!th align=left
 - Левый
 - Заголовок
}}}
{{{#!th align=left
 - Правый
 - Заголовок
}}}
|----------------------------------
{{{#!td style="background: #ffd"
 - Левое
 - Содержимое
}}}
{{{#!td style="vertical-align: top"
!ПравоеСодержимое
}}}
|----------------------------------
|| ... и это можно смешать||\
||с ячейками из каналов ||
{{{#!td colspan=2
Выберите стиль, наиболее подходящий
для вашего содержания
 
См. в WikiFormatting#Tables подробности
о таблицах из каналов.
}}}
 
Если нужно добавить
атрибутов к самой таблице...

{{{
#!table style="border:none;text-align:center;margin:auto"
  {{{#!tr ====================================
    {{{#!th style="border: none"
    Левый заголовок
    }}}
    {{{#!th style="border: none"
    Правый заголовок
    }}}
  }}}
  {{{#!tr ==== style="border: 1px dotted grey"
    {{{#!td style="border: none"
    1.1
    }}}
    {{{#!td style="border: none"
    1.2
    }}}
  }}}
  {{{#!tr ====================================
    {{{#!td style="border: none"
    2.1
    }}}
    {{{#!td
    2.2
    }}}
  }}}
}}}
}}}

Заметьте, что по умолчанию таблицам назначается класс CSS "wiki", который обеспечивает стандартную обводку для таблицы и ячеек и отличающийся вид ячеек заголовка (результат виден на этой странице). Убирая этот класс (`#!table class=""`), вы возвращаете себе полный контроль над оформлением таблицы. В частности, как таблица, так и строки или ячейки лишатся обводки, и это более эффективный метод, чем везде указывать параметр `style="border: no"`.

{{{#!table class=""
||= Разметка =||= Результат =||
 {{{#!td
  {{{
  {{{#!table class=""
  ||  0||  1||  2||
  || 10|| 20|| 30||
  || 11|| 22|| 33||
  ||||||=  числа  =||
  }}}
  }}}
 }}}
 {{{#!td
  {{{#!table class=""
  ||  0||  1||  2||
  || 10|| 20|| 30||
  || 11|| 22|| 33||
  ||||||=  числа  =||
  }}}
 }}}
}}}

Можно указать и другие альтернативные классы (не забывайте, что можете определять свои собственные в [TracInterfaceCustomization#SiteAppearance site/style.css]).
{{{#!comment
Other classes can be specified as alternatives (remember that you can define your own in [TracInterfaceCustomization#SiteAppearance site/style.css]).
}}}

||= Разметка =||= Результат =||
{{{#!td
  {{{
  {{{#!table class="listing"
  ||  0||  1||  2||
  || 10|| 20|| 30||
  || 11|| 22|| 33||
  ||||||=  числа  =||
  }}}
  }}}
}}}
{{{#!td
  {{{#!table class="listing"
  ||  0||  1||  2||
  || 10|| 20|| 30||
  || 11|| 22|| 33||
  ||||||=  числа  =||
  }}}
}}}


== Комментарии HTML ==
Комментарии HTML  удаляются из вывода процессора `html`. Для вставки комментарияя HTML в страницу wiki используйте процессор `htmlcomment` (доступен начиная с 0.12). Для примера следующий блок кода:
{{{#!comment
HTML comments are stripped from the output of the `html` processor. To add an HTML comment to a wiki page, use the `htmlcomment` processor (available since 0.12). For example, the following code block:
}}}
||= Разметка =||
{{{#!td
  {{{
  {{{
  #!htmlcomment
  Этот блок преобразуется в комментарий HTML.
  Он может содержать <tags> и &entities; которые не экранируются при выводе.
  }}}
  }}}
}}}
|------------------------------------------------------------------------------
||= Результат =||
{{{#!td
  {{{
  <!--
  Этот блок преобразуется в комментарий HTML.
  Он может содержать <tags> и &entities; которые не экранируются при выводе.
  -->
  }}}
}}}

Обратите внимание, что последовательность символов "`--`" запрещена в комментариях HTML и будет приводить к ошибке отображения.


== Больше информации ==

 * http://www.w3.org/ -- World Wide Web Consortium
 * http://www.w3.org/MarkUp/ -- HTML Markup Home Page

----
См. также:  WikiProcessors, WikiFormatting, WikiRestructuredText
