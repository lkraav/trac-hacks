#!/usr/bin/python

# Usage:
#   trac-wiki-notify <trac-url> <trac-path> <wiki-notification-page> \
#     <time-delta> <from-address> [<smtp-server>]
#
# This script extracts a list of subscribers from a trac page and mails them a
# list of changes over the last time-delta seconds.
#
# eg. This will mail any changes over the last hour:
#    trac-wiki-notify /srv/trac/devtodo WikiNotify 3600
#
# Users are included in the notification page as a Trac Wiki formatted list of 
# E-Mail addresses. ie. "<space><space>*<space><email>"

import sqlite
import sys
import smtplib
import re
from time import strftime, localtime, time

if len(sys.argv) < 5:
	raise StandardError("Not enough arguments")

trac_url, trac_location, notify_page, time_delta, smtp_from = sys.argv[1:6]
smtp_server = "localhost"
if len(sys.argv) > 6: smtp_server = sys.argv[6]

db = sqlite.connect(trac_location + "/db/trac.db", mode=0555)
q = db.cursor()

# Get list of users
q.execute("select text from wiki where name=%s order by time desc limit 1", notify_page)
row = q.fetchone()

if row:
	smtp_to = [x[4:].strip() for x in row[0].split("\n") if x[0:4] == '  * ']

	# Get list of pages
	q.execute("select name, time, author, comment, version from wiki where time > strftime('%%s','now') - %i order by time desc", int(time_delta))
	changes = q.fetchall()

	if changes:
		smtp_body = "From: %s\n" % smtp_from
		smtp_body += "Reply-To: %s\n" % smtp_from
		smtp_body += "Subject: Notification of %i changes to Trac Wiki %s\n\n" % (len(changes), trac_url)
		smtp_body += "Changes since %s\n\n" % strftime("%Y/%d/%m %H:%M:%S", localtime(time() - float(time_delta)))

		for change in changes:
			change_time = strftime("%Y/%d/%m %H:%M:%S", localtime(int(change[1])))
			smtp_body += "  %s (version %s) modified %s by %s" % (change[0], change[4], change_time, change[2])
			smtp_body += "\n    %swiki/%s?version=%s\n" % (trac_url, change[0], change[4])
			if change[3]: smtp_body += "    \"%s\"\n" % change[3]
			smtp_body += "\n"

		smtp_body += "You can remove yourself from notifications at this URL:\n  %swiki/%s\n" % (trac_url, notify_page)
		# Send the mail
		smtp = smtplib.SMTP(smtp_server)
		smtp.sendmail(smtp_from, smtp_to, smtp_body)
		smtp.quit()
