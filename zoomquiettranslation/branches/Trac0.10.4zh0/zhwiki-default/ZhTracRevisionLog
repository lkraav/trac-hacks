= 查看版本记录 =
[[ZhTracGuideToc]]

当你流览储存库时，你可以查询对应目前你在查看的路径的“Revision Log”视图。
它会显示一个最近的changset的列表，在changset下当前路径和任意其他路径都被
更改。

== 版本记录表格 ==

可以在修订日志应该开始的地方设置修订，使用“查看日志始于”域。一个空值
或“head”值会作为最新的changeset。

还可以指定日志应结束之处的丢定，使用“返回到”域。默认情况下，是左空，
意味这100处修订列举出来时修订日志应该停止。

还有，有三种形式的修订日志的操作。

默认情况下，修订日志“在副本上停止”，意思是无论何时监查“添加”、“复制”或
“重命名”等操作时，都不会显示旧版本。在运行分支时，这样就非常方便，因为
你只看到对应着分支上进行的操作的历史记录。

还可以通过选择“根随副本”模式在进行“复制”或“重命名”改变前你可以看到发生了什么。
这样会覆盖所有的复制或重命名改变。每次路径名改变都会有一个额外的indentation level。
这样，不同路径的改变可以很容易的组合在一起。

为了查看该路径上在“添加”前是否有一个“删除”改变，甚至还可以跳过一个“添加”改变。
该模式对应着“只显示添加，移动和删除”模式。

请注意，该操作是很资源密集的。

最后，还有一个“显示全部记录消息”的复选框，它控制着是否每个更改都应该显示提交
的记录消息的全部内容，还是只显示其缩短的版本。

== 版本记录信息 ==

每个版本记录条目，显示7列：
 1. 第一列包含了一对单选按钮并用来选择用于[wiki:ZhTracRevisionLog#viewingtheactualchanges viewing the actual changes]
    的“旧”和“新”版本。   
 2. 一个色码（类似于[wiki:ZhTracChangeset#ChangesetHeader changesets]中用到的代码）指示了更改的种类。
    单击此列刷新该版本记录，这样它接受此更改然后重新开始。   
 3. 更改发生的“日期”。
 4. “版本”号显示为`@xyz`。它是到ZhTracBrowser的一个链接，将版本作为基线。   
 5. “Changeset”号，显示为`[xyz]`。它是到ZhTracChangeset视图的一个链接。   
 6. 更改的“作者”。
 7. “记录消息”包含了一个摘要或全部的提交记录消息，取决于上面表格中的
    "显示全部记录消息"复选框的值。   
    

== 检查版本间的改变 ==

“查看改变”按钮（位于左侧改变列表的上方和下方）会显示所有的不同之处

注意，“旧”版本实际上并不需要比“新”版本要旧，它只是作为差异的一个标准。
因此全完可以创建一个“颠倒差异”来颠倒给定版本的中进行的更改。

最后，如果两个版本一样，对应的Changeset会显示出来。（与点击第5列的效果一样）

== 替代的格式 ==

=== The ChangeLog Text ===

本页的底部有一个“更改记录”链接，显示目前显示的版本的范围，
但作为普通的文本，符合!ChangeLog文件的常规。

=== RSS支持 ===

版本记录还提供了一个监控改变的RSS feed。要订阅某个文件或目录的RSS feed，在流览器
中打开其版本记录然后点击页面底部的橙色图标。更多关于Trac中的RSS支持，请见TracRSS.

----
相关信息：ZhTracBrowser, ZhTracChangeset, ZhTracGuide
