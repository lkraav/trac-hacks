= Tracd =

Tracd是一个独立的Trac网络服务器。多数情况下，它比[wiki:ZhTracCgi CGI script]更容易创建、运行的更快。

== Pros ==

 * 更独立: 你不需要安装apache或其他网络服务器。
 * 快：应该几乎和[wiki:ZhTracModPython mod_python]版本一样快，并且比[wiki:ZhTracCgi CGI]快的多。
 * 自动重装：Tracd可用于''auto_reload''中，无论何时你改变代码（Trac或插件中），它会自动重启服务器。
== Cons ==

 * 更少的特征: Tracd执行一个非常简单的网络服务器，不向Apache HTTPD那样可配置或可缩放。
 * No native HTTPS support: [http://www.rickk.com/sslwrap/ sslwrap] can be used instead,
   or [http://trac.edgewall.org/wiki/STunnelTracd stunnel -- a tutorial on how to use stunnel with tracd] or Apache with mod_proxy.
   无本地HTTPS支持：可以用[http://www.rickk.com/sslwrap/ sslwrap]或者[http://trac.edgewall.org/wiki/STunnelTracd stunnel-- a tutorial on how to use stunnel with tracd],或者是有mod_proxy的Apache。

== 使用的例子 ==

在端口8080上的一个项目。(http://localhost:8080/)
{{{
 $ tracd -p 8080 /path/to/project
}}}
多于一个的项目。(http://localhost:8080/project1/ and http://localhost:8080/project2/)
{{{
 $ tracd -p 8080 /path/to/project1 /path/to/project2
}}}

因为Trac使用该名字来使得不同项目的URL变得独一无二，各项目的路径的最后一部分不能完全相同。因此，如果你使用`/project1/path/to`和`/project2/path/to`，你只能看到第二个项目。

另一种服务多个项目的方法是指定一个父目录，其中每个子目录是一个Trac项目，使用`-e`选项。上面的例子可以改写为：
{{{
 $ tracd -p 8080 -e /path/to
}}}

== 使用验证 ==

Tracd对基本验证和分类验证提供支持。默认是使用分类，要使用基本认证，在下面的例子中将`--auth`替换为`--basic-auth`，并省略域。

  “对基本验证的支持在0.9版本中已经添加了”

如果文件`/path/to/users.htdigest`包含使用“mycompany.com”域的项目1的用户帐号，你可以用下列命令行来启动tracd：
{{{
 $ tracd -p 8080 --auth project1,/path/to/users.htdigest,mycompany.com /path/to/project1
}}}

“注意”：传递到`--auth`选项的项目“名称”是项目环境目录的基本名字。
当然，分类文件可以共享，这样它就可以用于多个项目：
{{{
 $ tracd -p 8080 \
   --auth project1,/path/to/users.htdigest,mycompany.com \
   --auth project2,/path/to/users.htdigest,mycompany.com \
   /path/to/project1 /path/to/project2
}}}

另一个共享分类文件的方法是为项目名称指定"*"：
{{{
 $ tracd -p 8080 \
   --auth *,/path/to/users.htdigest,mycompany.com \
   /path/to/project1 /path/to/project2
}}}

== 如何创建一个htdigest密码文件 ==

如果你有Apache，你可以使用htdigest命令来创建密码文件。输入'htdigest'得到一些使用说明或者阅读摘自Apache手册的[http://httpd.apache.org/docs/2.0/programs/htdigest.html this page]得到精确的指导。你要为创建的每个用户输入密码。对于密码文件的名字，你可以使用你想要的任何名字，但是如果你使用`users.htdigest`，它会提醒你改文件包含的内容。作为建议，将它和[ZhTracIni trac.ini文件放在你的<projectname>/conf文件夹中。

注意，你可以不使用--auth参数来启动tracd，但如果你单击''Login''链接，你会造成一个错误。

== 不用Apache创建密码 ==

如果你没有Apache，你可以使用这个简单的Python见本来创建你的密码：

{{{
from optparse import OptionParser
import md5

# build the options
usage = "usage: %prog [options]"
parser = OptionParser(usage=usage)
parser.add_option("-u", "--username",action="store", dest="username", type = "string",
                  help="the username for whom to generate a password")
parser.add_option("-p", "--password",action="store", dest="password", type = "string",
                  help="the password to use")
(options, args) = parser.parse_args()

# check options
if (options.username is None) or (options.password is None):
   parser.error("You must supply both the username and password")
   
# Generate the string to enter into the htdigest file
realm = 'trac'
kd = lambda x: md5.md5(':'.join(x)).hexdigest()
print ':'.join((options.username, realm, kd([options.username, realm, options.password])))
}}}

注意：如果你使用上述脚本，你必须使用--auth选项，而不是--basic-auth，并且你必须在 --auth值中设置域（没有引用）。使用的例子（假设你将脚本保存为trac-digest.py）：

{{{
python trac-digest.py -u username -p password >> c:\digest.txt
python tracd --port 8000 --auth proj_name,c:\digest.txt,trac c:\path\to\proj_name
}}}

== 提示 ==

=== 服务静态的内容 ===

如果`tracd`是用于项目的唯一网络服务器，它还可以用于分发静态内容（tarballs, Doxygen文档，等）

该静态内容应放在`$TRAC_ENV/htdocs`文件夹中，并且通过类似`<project_URL>/chrome/site/...`的URL来访问。

例子：假设一个`$TRAC_ENV/htdocs/software-0.1.tar.gz`文件，对应的URL应该是`/<project_name>/chrome/site/software-0.1.tar.gz`，
可以使用wiki`[/<project_name>/chrome/site/software-0.1.tar.gz]`中的相关链接语法来编写。

Trac的开发版本支持一个新的上面例子中的`htdocs:`Trac链接语法。这样，上面例子中的链接可以
只用`htdocs:software-0.1.tar.gz`来编写。

----
相关信息: ZhTracInstall, ZhTracCgi, ZhTracModPython, ZhTracGuide
----
'''Translation:'''
 * [https://opensvn.csie.org/traccgi/trac_rus/wiki/StandAloneTracForTeapot Russian] (перевод на Русский)
