

= Trac链接 =
Trac链接是Trac的一个基本特征, 因为他们允许在诸如传票, 报表, 变更集, Wiki页面, 里程碑和源文件等(只要是使用[ZhWikiFormatting Wiki格式])的各种实体间流畅的链接.

Trac链接通常是''type:id''形式, ''id''代表了项目的号码, 名称或路径, 尽管一些常用项目也有简化符号.

一些例子:
 * 传票: '''!#1''' or '''!ticket:1'''
 * 传票注释: '''!comment:ticket:1:2''' 
 * 报表: '''!{1}''' or '''!report:1'''
 * 变更集: '''!r1''', '''![1]''', '''!changeset:1''' or (restricted) '''![1/trunk]''', '''!changeset:1/trunk'''
 * 检入日志: '''!r1:3''', '''![1:3]''' or '''!log:@1:3''', '''!log:trunk@1:3'''
 * 对比 (需0.10以上版本): '''!diff:@1:3''', '''!diff:tags/trac-0.9.2/wiki-default//tags/trac-0.9.3/wiki-default''' or '''!diff:trunk/trac@3538//sandbox/vc-refactoring@3539'''
 * Wiki页面: '''!CamelCase''' or '''!wiki:CamelCase'''
 * 里程碑: '''!milestone:1.0'''
 * 附件: '''!attachment:ticket:944:attachment.1073.diff'''
 * 文件: '''!source:trunk/COPYING'''
 * 指定版本文件: '''!source:/trunk/COPYING@200'''
 * 指定版本文件行: '''!source:/trunk/COPYING@200#L25'''
显示:
 * 传票: #1 or ticket:1
 * 传票注释: comment:ticket:1:2 
 * 报表: {1} or report:1
 * 变更集: r1, [1], changeset:1, or (restricted) [1/trunk], changeset:1/trunk
 * 检入日志: r1:3, [1:3] or log:@1:3, log:trunk@1:3
 * 对比 (需0.10以上版本): diff:@20:30, diff:tags/trac-0.9.2/wiki-default//tags/trac-0.9.3/wiki-default or diff:trunk/trac@3538//sandbox/vc-refactoring/trac@3539
 * Wiki页面: CamelCase or wiki:CamelCase
 * 里程碑: milestone:1.0
 * 附件: attachment:ticket:944:attachment.1073.diff
 * 文件: source:trunk/COPYING
 * 指定版本文件: source:/trunk/COPYING@200
 * 指定版本文件行: source:/trunk/COPYING@200#L25

''注意'': 很少用到[ZhCamelCase 驼峰式], 但用它来引用那些名称不遵守Wiki页面名称规则的那些页面非常方便, 即, 单个词, 非字母字符等. 更多关于Wiki页面名称的链接的特征, 请见[ZhWikiPageNames Wiki页面名].

使用完整(非简化的)符号的Trac链接, 还可以给它一个类似这样的自定义链接标题:

{{{
[ticket:1 这是一个到传票1号的链接].
}}}

显示:[ticket:1 这是一个到传票1号的链接].

如果省略标题, 只有id(在冒号后面)能显示出来:

{{{
[ticket:1]
}}}

显示: [ticket:1]

如果省略一个完整的链接的名称空间部分(自0.10版本后), 将默认是`wiki`:

{{{
[SandBox the sandbox]
}}}

显示: [SandBox the sandbox]

Trac链接是一个非常简单的想法, 但实际上可以是一个非常复杂的信息网络. 实践中, 它用起来很直观并且简单, 我们发现''链接轨迹''相当有助于更好理解在项目中发生的事情, 或者为何有一个特定的变化.

下列章节详细描述了独立链接类型, 以及几个关于链接高级用法的注解.

== 附件: 链接 ==

附件的链接语法如下所示:
 * !attachment:the_file.txt 创建了一个当前对象的附件the_file.txt的链接
 * !attachment:wiki:MyPage:the_file.txt 创建了一个到!MyPage Wiki页面的附件的链接
* !attachment:ticket:753:the_file.txt 创建了一个传票753的附件文件the_file.txt的链接

== 源码:链接 ==

如果路径指向一个目录的话, source:/some/path链接的默认行为是打开此目录, 否则会打开日志视图. 还可以直接链接到某个文件的修订, 像: source:/some/file@123, 或链接到最新的修订: source:/some/file@latest. 如果指定了修订, 你甚至可以链接到一个特定的行号: source:/some/file@123#L10.

== 搜索和查询链接 ==

请见[ZhTracSearch#SearchLinks 搜索链接]和[ZhTracQuery#UsingTracLinks 使用Trac链接] .

== 子Wiki链接 ==
要创建一个到子Wiki页面的链接, 只需使用一个'/':
{{{
 [wiki:WikiPage/SubWikiPage].
}}}

== [ZhInterWiki 外部Wiki]链接 ==

可以自由地定义指向其他Web应用的资源的前缀. 这些前缀的定义以及相应Web应用的URL被定义在一个特殊的Wiki页面中——[ZhInterMapTxt 链接前缀表]页面. 注意, 虽然它也可被用来创建到其他Trac环境的链接, 但已经有一个比这更特定, 更灵活的方法.

== [ZhInterTrac 外部Trac]链接 ==

如果用另一个Trac环境的名字作为前缀的话(另一个Trac环境名加冒号":"), 上述所有形式的Trac链接都可引用另一个Trac环境中的资源. 因此, 另一个Trac环境必须在这个Trac环境中注册. 细节请参考[ZhInterTrac 外部Trac].

== 服务器相关的链接 ==

通常要求能够链接到没有内置Trac链接机制的服务器的对象, 例如, 静态资源, `/register`页面等. 只需使用服务器根部的绝对路径或者当前页面的URL的相对链接, 就可以实现.

{{{
[../newticket newticket]
[/ home]
}}}

显示:[../newticket newticket] [/ home]

== 用引号包围Trac链接中的空格 ==

Trac链接的前缀后, 如果目标包含空格, 应使用一对单引号或双引号来包围.

例子:
 * !wiki:"The whitespace convention"
 * !attachment:'the file.txt' 或
 * !attachment:"the file.txt" 
 * !attachment:"ticket:123:the file.txt" 

== 在哪里使用Trac链接 ==

你可以在下列地方使用[ZhTracLinks Trac链接]:
 * SVN的源代码提交消息
 * Wiki页面
 * 传票, 报表和里程碑的详细描述
 
以及其他明确标明支持Wiki格式的文字域.

== 链接转义 ==

要防止解析一个Trac链接(转义), 可以在前面加一个感叹号'!'.
{{{
 !NoLinkHere.
 ![42] is not a link either.
}}}

显示:
 !NoLinkHere.
 ![42] is not a link either.

----
原文版本: TracLinks[[BR]]
相关信息: [ZhWikiFormatting Wiki格式], [ZhTracWiki Trac内置Wiki], [ZhWikiPageNames Wiki页面名], [ZhInterTrac 外部Trac], [ZhInterWiki 外部Wiki][[BR]]
See also: WikiFormatting, TracWiki, WikiPageNames, InterTrac, InterWiki
