

= Trac和mod_python =
[[ZhTracGuideToc]]

Trac支持[http://www.modpython.org/ mod_python], 它显著加快了Trac的响应时间, 特别是和[ZhTracCgi CGI]相比, 并允许使用许多[wiki:ZhTracStandalone tracd]/mod_proxy无法使用的Apache特征.

== 简单的配置 ==

如果你只安装了mod_python, 你可能还要在Apache配置中添加一行来载入模块:
{{{
LoadModule python_module modules/mod_python.so
}}}

 ''注意:模块的准确路径取决于HTTPD安装布局.''

通过添加以下内容到你的httpd.conf, 可以测试你的mod_python安装. 出于安全, 进行测试后, 你应该将其删除掉.
{{{
<Location /mpinfo>
   SetHandler mod_python
   PythonHandler mod_python.testhandler
</Location>
}}}

mod_python上的Trac的一个简单设置如下:

{{{
<Location /projects/myproject>
   SetHandler mod_python
   PythonHandler trac.web.modpython_frontend 
   PythonOption TracEnv /var/trac/myproject
   PythonOption TracUriRoot /projects/myproject
</Location>
}}}

'''`TracUriRoot`'''选项可有可无. 试试不带该选项进行配置, 如果Trac构造出的URL看起来是错的或如果Trac似乎不能正确地识别URL, 就添加'''`TracUriRoot`'''选项. 你将注意到, `Location`和'''`TracUriRoot`'''的路径是相同的.

=== 配置验证 ===

配置验证与在[wiki:ZhTracCgi#AddingAuthentication CGI]中一样:
{{{
<Location "/projects/myproject/login">
  AuthType Basic
  AuthName "myproject"
  AuthUserFile /var/trac/myproject/.htpasswd
  Require valid-user
</Location>
}}}

=== 设置!PythonPath ===

如果Trac安装包没有安装在你的Python路径中, 你需要使用`PythonPath`指令, 告诉Apache在哪里找到Trac mod_python处理程序:
{{{
<Location /projects/myproject>
  ...
  PythonPath "sys.path + ['/path/to/trac']"
  ...
</Location>
}}}

注意一下`PythonPath`指令, ''不是''`SetEnv PYTHONPATH`, 因为后者不起作用.

== 设置多个项目 ==

Trac mod_python处理程序有一个类似SVN的`SvnParentPath`配置选项, 叫做`TracEnvParentDir`:
{{{
<Location /projects>
  SetHandler mod_python
  PythonHandler trac.web.modpython_frontend 
  PythonOption TracEnvParentDir /var/trac
  PythonOption TracUriRoot /projects
</Location>
}}}

当你请求`/projects`URL时, 你会得到在`TracEnvParentDir`中设置的目录下所有Trac环境子目录的列表. 选择列表中的任意项目都会把你带到相应的Trac环境.

如果你不想将子目录列表作为你的项目主页, 你可以使用
{{{
<LocationMatch "/.+/">
}}}

它会指导Apache对所有非根目录的位置使用mod_python, 而同时又允许你在文档根目录中放入一个自定义主页.

你还可以通过使用`<LocationMatch>`指令, 对所有的项目使用同样的验证域:

{{{
<LocationMatch "/projects/[^/]+/login">
  AuthType Basic
  AuthName "Trac"
  AuthUserFile /var/trac/.htpasswd
  Require valid-user
</LocationMatch>
}}}

== 虚拟机配置 ==

下面的配置例子将trac设置为一个虚拟服务器(即:当你在类似!http://trac.mycompany.com的URL上访问它时):

{{{
<VirtualHost * >
    DocumentRoot /var/trac/myproject
    ServerName trac.mycompany.com
    <Location />
        SetHandler mod_python
        PythonHandler trac.web.modpython_frontend
        PythonOption TracEnv /var/trac/myproject
        PythonOption TracUriRoot /
    </Location>
    <Location /login>
        AuthType Basic
        AuthName "MyCompany Trac Server"
        AuthUserFile /var/trac/myproject/.htpasswd
        Require valid-user
    </Location>
</VirtualHost>
}}}

对于支持多个项目的虚拟机, 将"`TracEnv`" /var/trac/myproject替换为"`TracEnvParentDir`" /var/trac/

== 疑难解答 ==

通常, 如果你收到服务器的错误网页, 你可以查看Apache错误日志, 或者启用`PythonDebug`选项:
{{{
<Location /projects/myproject>
  ...
  PythonDebug on
</Location>
}}}

=== 表格提交问题 ===

如果你在Trac中提交表单时遇到了问题(通常在提交后, 你被重定向到起始页), 检查{{{DocumentRoot}}}中是否包含一个与映射到mod_python处理器相同路径的目录或文件. 由于某种原因, mod_python映射到一个位置同时又匹配一个静态资源时, 它会很困惑.

=== 虚拟机配置的问题 ===

如果使用<Location />指令, 设置`DocumentRoot`会造成一个''403 (Forbidden)''错误. 删除`DocumentRoot`指令, 或确认它指向的访问目录是允许的(在对应的`<Directory>`块中).

与`SetHandler`一起使用<Location />, 使得所有文件都要由mod_python来处理, 从而造成不能下载任何CSS或图片/图标. 我使用<Location /trac> `SetHandler None` </Location>来绕开这个问题, 尽管我不知道这是否是最好的解决办法.

=== 使用 .htaccess ===

尽管看起来可以用.htaccess文件来rewrite上述配置为文档根目录, 但却不起作用. Apache会向每个Trac URL中添加一个"/", 这样会干扰其正常的运行.

用mod_rewrite可能会让它起作用, 但我没有做到. 总之, 比起其价值来太麻烦了, 还是用前面提供的指导吧.:)

=== Win32 问题 ===
如果你在Windows上运行trac和mod_python, 上传附件将不起作用. 这个问题在3.1.4或之后的mod_python版本中得到了解决, 因此请升级mod_python来修复它.

=== OS X 问题 ===

在OS X上使用mod_python, 你无法用`apachectl restart`重启Apache. 这个问题在mod_python3.2中已经修复了, 但还有一个更早版本[http://www.dscpl.com.au/projects/vampire/patches.html here]的可用补丁包.

=== SELinux 问题 ===

如果Trac报告类似''无法在db.lock获得共享锁'', 存储库的安全环境需要进行设置:

{{{
chcon -R -h -t httpd_sys_content_t PATH_TO_REPOSITORY
}}}

请参考[[http://subversion.tigris.org/faq.html#reposperms]]

=== FreeBSD issues ===

留意安装的mod_pyyhon和sqlite安装包的版本.Ports有新的, 也有旧的, 但pysqlite和mod_python的早期版本无法集成, 因为前者要求在python中的线程支持, 而后者则要求无线程安装.

=== SVN 问题 ===

如果你只在mod_python下遇到以下Trac错误''不支持的版本控制系统"svn"'', 但是在命令行甚至是在[ZhTracStandalone Trac独立服务器]下运行得很好, 有可能是你忘记了用[TracModPython#ConfiguringPythonPath PythonPath]指令添加Python绑定的路径了.(更好的办法是在Python的site-packages目录中, 增加一个到绑定的链接, 或者在该目录中创建一个.pth文件)

如果不是, 可能是你在使用的SVN库和apche二进制不兼容(通常原因是`apr`库不兼容). 如果是这样, 你在Apache中也不能使用svn模块(`mod_dav_svn`).

----
原文版本: TracModPython[[BR]]
相关信息: [ZhTracGuide Trac导览], [ZhTracInstall Trac安装], [ZhTracCgi TracCgi], [ZhTracFastCgi TracFastCgi][[BR]]
See also: TracGuide, TracInstall, TracCgi, TracFastCgi