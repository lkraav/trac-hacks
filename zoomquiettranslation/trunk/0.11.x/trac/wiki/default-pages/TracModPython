= Trac and mod_python =
[[TracGuideToc]]

Trac支持[http://www.modpython.org/ mod_python], 它显著加快了Trac的响应时间, 特别是和[ZhTracCgi CGI]相比, 并允许使用许多[wiki:ZhTracStandalone tracd]/mod_proxy无法使用的Apache特征.

These instructions are for Apache 2; if you are still using Apache 1.3, you may have some luck with [wiki:TracModPython2.7 TracModPython2.7].

== 简单的配置 ==

如果你只安装了mod_python, 你可能还要在Apache配置中添加一行来载入模块:
{{{
LoadModule python_module modules/mod_python.so
}}}

 ''注意:模块的准确路径取决于HTTPD安装布局.''
On Debian using apt-get
{{{
apt-get install libapache2-mod-python libapache2-mod-python-doc
}}}
(Still on Debian) after you have installed mod_python, you must enable the modules in apache2 (equivalent of the above Load Module directive):
{{{
a2enmod mod_python
}}}
On Fedora use, using yum:
{{{
yum install mod_python
}}}
You can test your mod_python installation by adding the following to your httpd.conf.  You should remove this when you are done testing for security reasons. Note: mod_python.testhandler is only available in mod_python 3.2+.
{{{
#!xml
<Location /mpinfo>
   SetHandler mod_python
   PythonInterpreter main_interpreter
   PythonHandler mod_python.testhandler
</Location>
}}}

mod_python上的Trac的一个简单设置如下:

{{{
#!xml
<Location /projects/myproject>
   SetHandler mod_python
   PythonInterpreter main_interpreter
   PythonHandler trac.web.modpython_frontend 
   PythonOption TracEnv /var/trac/myproject
   PythonOption TracUriRoot /projects/myproject
</Location>
}}}

'''`TracUriRoot`'''选项可有可无. 试试不带该选项进行配置, 如果Trac构造出的URL看起来是错的或如果Trac似乎不能正确地识别URL, 就添加'''`TracUriRoot`'''选项. 你将注意到, `Location`和'''`TracUriRoot`'''的路径是相同的.

=== 配置验证 ===

Creating password files and configuring authentication works similar to the process for [wiki:TracCgi#AddingAuthentication CGI]:
{{{
#!xml
<Location /projects/myproject/login>
  AuthType Basic
  AuthName "myproject"
  AuthUserFile /var/trac/myproject/.htpasswd
  Require valid-user
</Location>
}}}

Configuration for mod_ldap authentication in Apache is a bit tricky (httpd 2.2.x and OpenLDAP: slapd 2.3.19)

1. You need to load the following modules in Apache httpd.conf
{{{
LoadModule ldap_module modules/mod_ldap.so
LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
}}}

2. Your httpd.conf also needs to look something like:

{{{
#!xml
<Location /trac/>
  SetHandler mod_python
  PythonInterpreter main_interpreter
  PythonHandler trac.web.modpython_frontend
  PythonOption TracEnv /home/trac/
  PythonOption TracUriRoot /trac/
  Order deny,allow
  Deny from all
  Allow from 192.168.11.0/24
  AuthType Basic
  AuthName "Trac"
  AuthBasicProvider "ldap"
  AuthLDAPURL "ldap://127.0.0.1/dc=example,dc=co,dc=ke?uid?sub?(objectClass=inetOrgPerson)"
  authzldapauthoritative Off
  require valid-user
</Location>
}}}

Or the LDAP interface to a Microsoft Active Directory:

{{{
#!xml
<Location /trac/>
  SetHandler mod_python
  PythonInterpreter main_interpreter
  PythonHandler trac.web.modpython_frontend
  PythonOption TracEnv /home/trac/
  PythonOption TracUriRoot /trac/
  Order deny,allow
  Deny from all
  Allow from 192.168.11.0/24
  AuthType Basic
  AuthName "Trac"
  AuthBasicProvider "ldap"
  AuthLDAPURL "ldap://adserver.company.com:3268/DC=company,DC=com?sAMAccountName?sub?(objectClass=user)"
  AuthLDAPBindDN       ldap-auth-user@company.com
  AuthLDAPBindPassword "the_password"
  authzldapauthoritative Off
  # require valid-user
  require ldap-group CN=Trac Users,CN=Users,DC=company,DC=com
</Location>
}}}

Note 1: This is the case where the LDAP search will get around the multiple OUs, conecting to Global Catalog Server portion of AD (Notice the port is 3268, not the normal LDAP 389). The GCS is basically a "flattened" tree which allows searching for a user without knowing to which OU they belong.

Note 2: Active Directory requires an authenticating user/password to access records (AuthLDAPBindDN and AuthLDAPBindPassword).

Note 3: The directive "require ldap-group ..."  specifies an AD group whose members are allowed access.



=== Setting the !PythonPath ===

如果Trac安装包没有安装在你的Python路径中, 你需要使用`PythonPath`指令, 告诉Apache在哪里找到Trac mod_python处理程序:
{{{
#!xml
<Location /projects/myproject>
  ...
  PythonPath "sys.path + ['/path/to/trac']"
  ...
</Location>
}}}

注意一下`PythonPath`指令, ''不是''`SetEnv PYTHONPATH`, 因为后者不起作用.

== 设置多个项目 ==

Trac mod_python处理程序有一个类似SVN的`SvnParentPath`配置选项, 叫做`TracEnvParentDir`:
{{{
#!xml
<Location /projects>
  SetHandler mod_python
  PythonInterpreter main_interpreter
  PythonHandler trac.web.modpython_frontend 
  PythonOption TracEnvParentDir /var/trac
  PythonOption TracUriRoot /projects
</Location>
}}}

当你请求`/projects`URL时, 你会得到在`TracEnvParentDir`中设置的目录下所有Trac环境子目录的列表. 选择列表中的任意项目都会把你带到相应的Trac环境.

如果你不想将子目录列表作为你的项目主页, 你可以使用
{{{
#!xml
<LocationMatch "/.+/">
}}}

它会指导Apache对所有非根目录的位置使用mod_python, 而同时又允许你在文档根目录中放入一个自定义主页.

你还可以通过使用`<LocationMatch>`指令, 对所有的项目使用同样的验证域:

{{{
#!xml
<LocationMatch "/projects/[^/]+/login">
  AuthType Basic
  AuthName "Trac"
  AuthUserFile /var/trac/.htpasswd
  Require valid-user
</LocationMatch>
}}}

== 虚拟机配置 ==

下面的配置例子将trac设置为一个虚拟服务器(即:当你在类似!http://trac.mycompany.com的URL上访问它时):

{{{
#!xml
<VirtualHost * >
    DocumentRoot /var/www/myproject
    ServerName trac.mycompany.com
    <Location />
        SetHandler mod_python
        PythonInterpreter main_interpreter
        PythonHandler trac.web.modpython_frontend
        PythonOption TracEnv /var/trac/myproject
        PythonOption TracUriRoot /
    </Location>
    <Location /login>
        AuthType Basic
        AuthName "MyCompany Trac Server"
        AuthUserFile /var/trac/myproject/.htpasswd
        Require valid-user
    </Location>
</VirtualHost>
}}}

if you have issues with login try using `<LocationMatch>` instead of `<Location>`

对于支持多个项目的虚拟机, 将"`TracEnv`" /var/trac/myproject替换为"`TracEnvParentDir`" /var/trac/

== 疑难解答 ==

通常, 如果你收到服务器的错误网页, 你可以查看Apache错误日志, 或者启用`PythonDebug`选项:
{{{
#!xml
<Location /projects/myproject>
  ...
  PythonDebug on
</Location>
}}}

For multiple projects, try restarting the server as well.

=== Expat-related segmentation faults === #expat

This problem will most certainly hit you on Unix when using python 2.4.
In Python 2.4, some version of Expat (an XML parser library written in C) is used, 
and if Apache is using another version, this results in segmentation faults.
As Trac 0.11 is using Genshi, which will use indirectly use Expat, that problem
can now hit you even if everything was working fine before with Trac 0.10.

See Graham Dumpleton's detailed [http://www.dscpl.com.au/wiki/ModPython/Articles/ExpatCausingApacheCrash explanation and workarounds] for the issue.

=== Form submission problems ===

如果你在Trac中提交表单时遇到了问题(通常在提交后, 你被重定向到起始页), 检查{{{DocumentRoot}}}中是否包含一个与映射到mod_python处理器相同路径的目录或文件. 由于某种原因, mod_python映射到一个位置同时又匹配一个静态资源时, 它会很困惑.

=== 虚拟机配置的问题 ===

如果使用<Location />指令, 设置`DocumentRoot`会造成一个''403 (Forbidden)''错误. 删除`DocumentRoot`指令, 或确认它指向的访问目录是允许的(在对应的`<Directory>`块中).

与`SetHandler`一起使用<Location />, 使得所有文件都要由mod_python来处理, 从而造成不能下载任何CSS或图片/图标. 我使用<Location /trac> `SetHandler None` </Location>来绕开这个问题, 尽管我不知道这是否是最好的解决办法.

=== 使用 .htaccess ===

尽管看起来可以用.htaccess文件来rewrite上述配置为文档根目录, 但却不起作用. Apache会向每个Trac URL中添加一个"/", 这样会干扰其正常的运行.

用mod_rewrite可能会让它起作用, 但我没有做到. 总之, 比起其价值来太麻烦了, 还是用前面提供的指导吧.:)

=== Win32 问题 ===
如果你在Windows上运行trac和mod_python, 上传附件将不起作用. 这个问题在3.1.4或之后的mod_python版本中得到了解决, 因此请升级mod_python来修复它.

=== OS X 问题 ===

在OS X上使用mod_python, 你无法用`apachectl restart`重启Apache. 这个问题在mod_python3.2中已经修复了, 但还有一个更早版本[http://www.dscpl.com.au/projects/vampire/patches.html here]的可用补丁包.

=== SELinux 问题 ===

如果Trac报告类似''无法在db.lock获得共享锁'', 存储库的安全环境需要进行设置:

{{{
chcon -R -h -t httpd_sys_content_t PATH_TO_REPOSITORY
}}}

请参考[[http://subversion.tigris.org/faq.html#reposperms]]

=== FreeBSD issues ===

If you compiled and installed apache2, apache wouldn麓t support threads (cause it doesn麓t work very well on FreeBSD). You could force thread support when running ./configure for apache, using --enable-threads, but this isn麓t recomendable.
The best option [[http://modpython.org/pipermail/mod_python/2006-September/021983.html seems to be]] adding to /usr/local/apache2/bin/ennvars the line 

{{{
export LD_PRELOAD=/usr/lib/libc_r.so
}}}

=== Subversion 问题 ===

如果你只在mod_python下遇到以下Trac错误''不支持的版本控制系统"svn"'', 但是在命令行甚至是在[ZhTracStandalone Trac独立服务器]下运行得很好, 有可能是你忘记了用[TracModPython#ConfiguringPythonPath PythonPath]指令添加Python绑定的路径了.(更好的办法是在Python的site-packages目录中, 增加一个到绑定的链接, 或者在该目录中创建一个.pth文件)

You also need a recent version of `mod_python` in order to avoid a runtime error ({{{argument number 2: a 'apr_pool_t *' is expected}}}) due to the default usage of multiple sub-interpreters. 3.2.8 ''should'' work, though it's probably better to use the workaround described in #3371, in order to force the use of the main interpreter:
{{{
PythonInterpreter main_interpreter
}}}
This is anyway the recommended workaround for other well-known issues seen when using the Python bindings for Subversion within mod_python (#2611, #3455). See in particular Graham Dumpleton's comment in [comment:ticket:3455:9 #3455] explaining the issue.

=== Page layout issues ===

If the formatting of the Trac pages look weird chances are that the style sheets governing the page layout are not handled properly by the web server. Try adding the following lines to your apache configuration:
{{{
#!xml
Alias /myproject/css "/usr/share/trac/htdocs/css"
<Location /myproject/css>
    SetHandler None
</Location>
}}}

Note: For the above configuration to have any effect it must be put after the configuration of your project root location, i.e. {{{<Location /myproject />}}}.

=== HTTPS issues ===

If you want to run Trac fully under https you might find that it tries to redirect to plain http. In this case just add the following line to your apache configuration:
{{{
#!xml
<VirtualHost * >
    DocumentRoot /var/www/myproject
    ServerName trac.mycompany.com
    SetEnv HTTPS 1
    ....
</VirtualHost>
}}}

=== Fedora 7 Issues ===
Make sure you install the 'python-sqlite2' package as it seems to be required for TracModPython but not for tracd


=== Segmentation fault with php5-mhash or other php5 modules ===
You may encounter segfaults (reported on debian etch) if php5-mhash module is installed. Try to remove it to see if this solves the problem. See debian bug report [[http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=411487]]

Some people also have troubles when using php5 compiled with its own 3rd party libraries instead of system libraries. Check here [[http://www.djangoproject.com/documentation/modpython/#if-you-get-a-segmentation-fault]]

----
原文版本: TracModPython[[BR]]
相关信息: [ZhTracGuide Trac导览], [ZhTracInstall Trac安装], [ZhTracCgi TracCgi], [ZhTracFastCgi TracFastCgi][[BR]]
See also: TracGuide, TracInstall, TracCgi, TracFastCgi
